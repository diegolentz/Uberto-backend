version: '3.8'

services:
  db:
    image: postgres:17-alpine
    container_name: uberto_sql
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=uberto_sql
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./Docker/init_db.sh:/docker-entrypoint-initdb.d/01_init_db.sh
    networks:
      - backend_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container_uberto
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@phm.edu.ar
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - backend_network

  router01:
    image: mongo:latest
    container_name: router-01
    command: mongos --port 27017 --configdb rs-config-server/configsvr01:27017,configsvr02:27017 --bind_ip_all
    ports:
      - 27117:27017
    restart: always
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_router01_db:/data/db
      - mongodb_cluster_router01_config:/data/configdb
    networks:
      - backend_network

  configsvr01:
    image: mongo:latest
    container_name: mongo-config-01
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    ports:
      - 27119:27017
    restart: always
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_configsvr01_db:/data/db
      - mongodb_cluster_configsvr01_config:/data/configdb
    networks:
      - backend_network

  configsvr02:
    image: mongo:latest
    container_name: mongo-config-02
    command: mongod --port 27017 --configsvr --replSet rs-config-server
    ports:
      - 27120:27017
    restart: always
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_configsvr02_db:/data/db
      - mongodb_cluster_configsvr02_config:/data/configdb
    networks:
      - backend_network

  shard01-a:
    image: mongo:latest
    container_name: shard-01-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    ports:
      - 27122:27017
    restart: always
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard01_a_db:/data/db
      - mongodb_cluster_shard01_a_config:/data/configdb
    networks:
      - backend_network

  shard01-b:
    image: mongo:latest
    container_name: shard-01-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    ports:
      - 27123:27017
    restart: always
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard01_b_db:/data/db
      - mongodb_cluster_shard01_b_config:/data/configdb
    networks:
      - backend_network

  shard01-c:
    image: mongo:latest
    container_name: shard-01-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-01
    ports:
      - 27124:27017
    restart: always
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard01_c_db:/data/db
      - mongodb_cluster_shard01_c_config:/data/configdb
    networks:
      - backend_network

  shard02-a:
    image: mongo:latest
    container_name: shard-02-node-a
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    ports:
      - 27125:27017
    restart: always
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard02_a_db:/data/db
      - mongodb_cluster_shard02_a_config:/data/configdb
    networks:
      - backend_network

  shard02-b:
    image: mongo:latest
    container_name: shard-02-node-b
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    ports:
      - 27126:27017
    restart: always
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard02_b_db:/data/db
      - mongodb_cluster_shard02_b_config:/data/configdb
    networks:
      - backend_network

  shard02-c:
    image: mongo:latest
    container_name: shard-02-node-c
    command: mongod --port 27017 --shardsvr --replSet rs-shard-02
    ports:
      - 27127:27017
    restart: always
    volumes:
      - ./scripts:/scripts
      - mongodb_cluster_shard02_c_db:/data/db
      - mongodb_cluster_shard02_c_config:/data/configdb
    networks:
      - backend_network

  redis:
    container_name: redis-uberto
    hostname: redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - backend_network

  redis-commander:
    container_name: redis-commander-uberto
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - backend_network

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    restart: unless-stopped
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      server.memory.pagecache.size: 1G
      server.memory.heap.max_size: 1G
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_AUTH: neo4j/passw0rd
    volumes:
      - neo4j_data:/data
    networks:
      - backend_network


volumes:
  db:
  pgadmin-data:
  mongodb_cluster_router01_db:
  mongodb_cluster_router01_config:
  mongodb_cluster_configsvr01_db:
  mongodb_cluster_configsvr01_config:
  mongodb_cluster_configsvr02_db:
  mongodb_cluster_configsvr02_config:
  mongodb_cluster_shard01_a_db:
  mongodb_cluster_shard01_a_config:
  mongodb_cluster_shard01_b_db:
  mongodb_cluster_shard01_b_config:
  mongodb_cluster_shard01_c_db:
  mongodb_cluster_shard01_c_config:
  mongodb_cluster_shard02_a_db:
  mongodb_cluster_shard02_a_config:
  mongodb_cluster_shard02_b_db:
  mongodb_cluster_shard02_b_config:
  mongodb_cluster_shard02_c_db:
  mongodb_cluster_shard02_c_config:
  redis_data:
  neo4j_data:

networks:
  backend_network:
    driver: bridge